{"version":3,"file":"toolbar.min.js","sources":["../utils/types/isString.js","../utils/lang/toString.js","../utils/types/isFunction.js","../utils/types/isObject.js","../utils/types/isArray.js","../utils/lang/later.js","../utils/lang/guid.js","../utils/lang/cloneDeep.js","../utils/types/isElement.js","../utils/types/isDOM.js","../utils/types/isHTMLCollection.js","../utils/types/isFragment.js","../utils/types/isTextNode.js","../utils/lang/hasOwn.js","../utils/dom/hasClass.js","../utils/dom/addClass.js","../utils/dom/setAttributes.js","../utils/dom/setAttribute.js","../utils/dom/createElement.js","../utils/dom/removeClass.js","../utils/lang/trim.js","../utils/dom/matches.js","../utils/dom/getParentOrHost.js","../utils/event/enum.js","../utils/event/_off.js","../utils/event/_delete.js","../utils/event/purgeElement.js","../utils/event/getListeners.js","../utils/event/off.js","../utils/event/on.js","../utils/event/getTarget.js","../utils/dom/resolveTextNode.js","../utils/dom/closest.js","../utils/icons/symbols.js","../utils/icons/getSymbol.js","../utils/icons/getSymbols.js","../utils/icons/paint.js","../utils/icons/add.js","../utils/observer/_subscribers.js","../utils/observer/_hasDirectSubscribersFor.js","../utils/observer/has.js","../utils/observer/_hasSubscribers.js","../utils/observer/emit.js","../utils/types/isTypedArray.js","../utils/observer/_removeSubscriber.js","../utils/observer/off.js","../utils/observer/_removeSubscriberByToken.js","../base/component.js","../utils/lang/extend.js","../utils/observer/on.js","../base/command.js","../base/commands.js","../utils/types/isSVG.js","../utils/icons/createElement.js","utils/_createButton.js","../utils/icons/icon.js","symbols.js","toolbar.js"],"sourcesContent":["/**\r\n * 检测数据是否为 String 类型\r\n * ========================================================================\r\n * @method isArray\r\n * @param {*} str\r\n * @returns {boolean}\r\n */\r\nconst isString = (str) => {\r\n  return typeof str === 'string'\r\n}\r\n\r\nexport default isString\r\n","/**\r\n * Object 对象原型上的 toString 方法\r\n * ========================================================================\r\n * @method toString\r\n * @param {*} val\r\n * @returns {string}\r\n */\r\nconst toString = (val) => {\r\n  return Object.prototype.toString.apply(val)\r\n}\r\n\r\nexport default toString\r\n","import toString from '../../utils/lang/toString'\r\n\r\n/**\r\n * 检测测试数据是否为 Function 类型\r\n * ========================================================================\r\n * @method isFunction\r\n * @param {*} val - （必须）待检测的数据\r\n * @returns {boolean} 'val' 是 Function 类型返回 true，否则返回 false\r\n */\r\nconst isFunction = (val) => {\r\n  return typeof val === 'function' || toString(val) === '[object Function]'\r\n}\r\n\r\nexport default isFunction\r\n","import toString from '../lang/toString'\r\nimport isFunction from './isFunction'\r\n\r\n/**\r\n * 检测数据是否为 Object 类型\r\n * ========================================================================\r\n * @method isObject\r\n * @param {*} o\r\n * @returns {boolean}\r\n */\r\nconst isObject = (o) => {\r\n  return (\r\n    (toString(o) === '[object Object]' ||\r\n      typeof o === 'object' ||\r\n      isFunction(o)) &&\r\n    o !== null\r\n  )\r\n}\r\n\r\nexport default isObject\r\n","import toString from '../../utils/lang/toString'\r\n\r\n/**\r\n * 检测数据是否为 Array 类型\r\n * ========================================================================\r\n * @method isArray\r\n * @param {*} o\r\n * @returns {boolean}\r\n */\r\nconst isArray = (o) => {\r\n  if (Array.isArray) {\r\n    return Array.isArray(o)\r\n  } else {\r\n    return toString(o) === '[object Array]'\r\n  }\r\n}\r\n\r\nexport default isArray\r\n","import isFunction from '../../utils/types/isFunction'\r\n\r\n/**\r\n * later - 延迟执行方法\r\n * ========================================================================\r\n * @method later\r\n * @param {Function} fn\r\n * @param {Number} [delay]\r\n * @returns {number|boolean}\r\n */\r\nconst later = (fn, delay = 300) => {\r\n  if (!isFunction(fn)) {\r\n    return false\r\n  }\r\n\r\n  return setTimeout(() => {\r\n    fn()\r\n  }, delay)\r\n}\r\n\r\nexport default later\r\n","/**\r\n * 生成唯一 id 字符串的函数\r\n * ========================================================================\r\n * @method guid\r\n * @param {String} [prefix] - 生成 id 的前缀字符串\r\n * @return {String} 返回一个表示唯一 id 的字符串\r\n */\r\nconst guid = (() => {\r\n  let uuid = 0\r\n\r\n  return (prefix) => {\r\n    uuid += 1\r\n\r\n    return prefix ? prefix + '-' + uuid : 'guid-' + uuid\r\n  }\r\n})()\r\n\r\nexport default guid\r\n","import isObject from '../../utils/types/isObject'\r\nimport isArray from '../../utils/types/isArray'\r\n\r\n/**\r\n * 深拷贝对象函数\r\n * ========================================================================\r\n * @methods cloneDeep\r\n * @param {Object} obj - 深拷贝的对象\r\n * @returns {Array|Object|*}\r\n *\r\n * @example\r\n * const arr = cloneDeep([2,3,4,6])\r\n * => [2,3,4,6]\r\n */\r\nconst cloneDeep = (obj) => {\r\n  let clone = {}\r\n\r\n  if (obj === null) {\r\n    return null\r\n  }\r\n\r\n  if (isArray(obj)) {\r\n    clone = Array.from(obj)\r\n  } else {\r\n    clone = Object.assign({}, obj)\r\n    Object.keys(clone).forEach((key) => {\r\n      return (clone[key] = isObject(obj[key]) ? cloneDeep(obj[key]) : obj[key])\r\n    })\r\n  }\r\n\r\n  return clone\r\n}\r\n\r\nexport default cloneDeep\r\n","import isObject from './isObject'\r\n\r\n/**\r\n * 检测数据是否为 HTMLElement DOM 节点\r\n * ========================================================================\r\n * @method isElement\r\n * @param {*} o\r\n * @returns {boolean}\r\n */\r\nconst isElement = (o) => {\r\n  return !!(isObject(o) && o.nodeName && o.tagName && o.nodeType === 1)\r\n}\r\n\r\nexport default isElement\r\n","import isObject from './isObject'\r\nimport isElement from './isElement'\r\nimport isHTMLCollection from './isHTMLCollection'\r\nimport isFragment from './isFragment'\r\nimport isTextNode from './isTextNode'\r\n\r\nconst isDOM = (el) => {\r\n  return !!(\r\n    isObject(el) &&\r\n    (isElement(el) || isHTMLCollection(el) || isFragment(el) || isTextNode(el))\r\n  )\r\n}\r\n\r\nexport default isDOM\r\n","import toString from '../../utils/lang/toString'\r\nimport isObject from './isObject'\r\n\r\nconst isHTMLCollection = (el) => {\r\n  return !!(isObject(el) && toString(el) === '[object NodeList]')\r\n}\r\n\r\nexport default isHTMLCollection\r\n","import toString from '../../utils/lang/toString'\r\nimport isObject from './isObject'\r\n\r\nconst isFragment = (fragment) => {\r\n  return !!(\r\n    isObject(fragment) && toString(fragment) === '[object DocumentFragment]'\r\n  )\r\n}\r\n\r\nexport default isFragment\r\n","import toString from '../../utils/lang/toString'\r\nimport isObject from './isObject'\r\n\r\nconst isTextNode = (el) => {\r\n  return !!(\r\n    isObject(el) &&\r\n    (toString(el) === '[object Text]' || (el.tagName && el.nodeType === 3))\r\n  )\r\n}\r\n\r\nexport default isTextNode\r\n","/**\r\n * 检测对象自身属性中是否具有指定的属性。\r\n * ========================================================================\r\n * @method hasOwn\r\n * @param {Object} obj - （必须）检测的目标对象\r\n * @param {String} prop - （必须）属性名\r\n * @returns {Boolean}\r\n */\r\nconst hasOwn = (obj, prop) => {\r\n  const hasOwnProperty = Object.prototype.hasOwnProperty\r\n  return obj && hasOwnProperty.call(obj, prop)\r\n}\r\n\r\nexport default hasOwn\r\n","import isElement from '../types/isElement'\r\n/**\r\n * 检测 DOM 节点是否包含名为 className 的样式\r\n * ========================================================================\r\n * @method hasClass\r\n * @param {HTMLElement} el - DOM 节点\r\n * @param {String} className - 样式名称\r\n * @returns {Boolean}\r\n */\r\nconst hasClass = (el, className) => {\r\n  const pattern = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)')\r\n  let allClass\r\n  let classList\r\n\r\n  if (!isElement(el)) {\r\n    return false\r\n  }\r\n\r\n  allClass = el.className\r\n\r\n  if (!allClass) {\r\n    return false\r\n  }\r\n\r\n  classList = el.classList\r\n\r\n  if (classList && classList.contains) {\r\n    return el.classList.contains(className)\r\n  }\r\n\r\n  return !!pattern.exec(allClass)\r\n}\r\n\r\nexport default hasClass\r\n","import hasClass from './hasClass'\r\n\r\n/**\r\n * 给 DOM 节点添加名为 className 的样式\r\n * ========================================================================\r\n * @method addClass\r\n * @param {HTMLElement} el - DOM 节点\r\n * @param {String} className - 样式名称\r\n * @returns {Boolean}\r\n */\r\nconst addClass = (el, className) => {\r\n  let classList\r\n  let allClass\r\n\r\n  if (hasClass(el, className)) {\r\n    return false\r\n  }\r\n\r\n  classList = el.classList\r\n\r\n  if (classList?.add) {\r\n    if (className.indexOf(' ') > -1) {\r\n      className.split(' ').forEach((name) => {\r\n        classList.add(name)\r\n      })\r\n    } else {\r\n      classList.add(className)\r\n    }\r\n  } else {\r\n    allClass = el.className\r\n    allClass += allClass.length > 0 ? ' ' + className : className\r\n    el.className = allClass\r\n  }\r\n}\r\n\r\nexport default addClass\r\n","import isObject from '../types/isObject'\r\nimport hasOwn from '../lang/hasOwn'\r\nimport setAttribute from './setAttribute'\r\n\r\nconst setAttributes = (el, attrs) => {\r\n  if (!el || !isObject(attrs)) {\r\n    return false\r\n  }\r\n\r\n  Object.keys(attrs).forEach((attr) => {\r\n    const value = attrs[attr]\r\n    if (hasOwn(attrs, attr)) {\r\n      setAttribute(el, attr, value)\r\n    }\r\n  })\r\n}\r\n\r\nexport default setAttributes\r\n","import addClass from './addClass.js'\r\n\r\n/**\r\n * 给 DOM 节点设置属性/值\r\n * ========================================================================\r\n * @method setAttribute\r\n * @param {HTMLElement} el - DOM 节点\r\n * @param {String} attr - 属性名称\r\n * @param {String|Number|Boolean} value - 属性值\r\n */\r\nconst setAttribute = (el, attr, value) => {\r\n  let tagName = el.tagName.toLowerCase()\r\n\r\n  switch (attr) {\r\n    case 'style':\r\n      el.style.cssText = value\r\n      break\r\n    case 'value':\r\n      if (tagName === 'input' || tagName === 'textarea') {\r\n        el.value = value\r\n      } else {\r\n        el.setAttribute(attr, value)\r\n      }\r\n      break\r\n    case 'htmlFor':\r\n      el.setAttribute('for', value)\r\n      break\r\n    case 'className':\r\n      addClass(el, value)\r\n      break\r\n    case 'innerHTML':\r\n      el.innerHTML = value\r\n      break\r\n    case 'innerText':\r\n      el.innerText = value\r\n      break\r\n    default:\r\n      el.setAttribute(attr, value)\r\n      break\r\n  }\r\n}\r\n\r\nexport default setAttribute\r\n","import isObject from '../types/isObject'\r\nimport isString from '../types/isString'\r\nimport isArray from '../types/isArray'\r\nimport isDOM from '../types/isDOM'\r\nimport setAttributes from './setAttributes'\r\n\r\n/**\r\n * 创建 DOM 节点，并添加属性和子节点\r\n * ========================================================================\r\n * @method createElement\r\n * @param {String} tagName - 标签名称\r\n * @param {Object|Array|HTMLElement|DocumentFragment|String} attrs - 属性对象或者子节点\r\n * @param {Array|HTMLElement|DocumentFragment|String} [children] - 子节点数组\r\n * @returns {HTMLElement}\r\n */\r\nconst createElement = (tagName, attrs, children) => {\r\n  const $fragment = document.createDocumentFragment()\r\n  const $el = document.createElement(tagName)\r\n  const isValidChild = (child) => {\r\n    return isDOM(child) || isString(child)\r\n  }\r\n  const append = (child) => {\r\n    let $child\r\n\r\n    if (!isValidChild(child)) {\r\n      return false\r\n    }\r\n\r\n    if (isDOM(child)) {\r\n      $child = child\r\n    } else if (isString(child)) {\r\n      $child = document.createTextNode(child)\r\n    }\r\n\r\n    $fragment.appendChild($child)\r\n  }\r\n\r\n  if (isObject(attrs)) {\r\n    setAttributes($el, attrs)\r\n  } else if (isArray(attrs) && attrs.every((attr) => isValidChild(attr))) {\r\n    attrs.forEach((child) => {\r\n      append(child)\r\n    })\r\n  } else if (isDOM(attrs)) {\r\n    append(attrs)\r\n  } else if (isString(attrs)) {\r\n    append(document.createTextNode(attrs))\r\n  }\r\n\r\n  if (isArray(children)) {\r\n    children.forEach((child) => {\r\n      append(child)\r\n    })\r\n  } else {\r\n    append(children)\r\n  }\r\n\r\n  $el.appendChild($fragment)\r\n\r\n  return $el\r\n}\r\n\r\nexport default createElement\r\n","import trim from '../lang/trim'\r\nimport hasClass from './hasClass'\r\n\r\n/**\r\n * 移除 DOM 节点的 className 样式\r\n * ========================================================================\r\n * @method removeClass\r\n * @param {HTMLElement} el - DOM 节点\r\n * @param {String} className - 样式名称\r\n * @returns {Boolean}\r\n */\r\nconst removeClass = (el, className) => {\r\n  let allClass = el.className\r\n  let classList\r\n\r\n  if (!allClass || !hasClass(el, className)) {\r\n    return false\r\n  }\r\n\r\n  classList = el.classList\r\n\r\n  if (classList?.remove) {\r\n    classList.remove(className)\r\n  } else {\r\n    allClass = trim(allClass.replace(className, ''))\r\n    el.className = allClass\r\n  }\r\n}\r\n\r\nexport default removeClass\r\n","import isString from '../../utils/types/isString'\r\n\r\n/**\r\n * 清楚字符串起始位置所有的空格\r\n * ========================================================================\r\n * @method trim\r\n * @param {string} str\r\n * @returns {string|Boolean}\r\n */\r\nconst trim = (str) => {\r\n  if (!isString(str)) {\r\n    return false\r\n  }\r\n  return str.replace(/(^\\s+)|(\\s+$)/g, '')\r\n}\r\n\r\nexport default trim\r\n","/**\r\n * 获取 options 节点下匹配 selector 选择器的 DOM 节点\r\n * ========================================================================\r\n * Element.matches() 方法可以用来判断 DOM 元素是否与给定的选择器匹配，事件代理判断是\r\n * 否触发绑定的代理事件回调函数，关键就是使用 Element.matches() 辨别当前事件触发的目\r\n * 标 DOM 元素是否为事件代理所期望触发的目标。\r\n * ========================================================================\r\n * @method matches\r\n * @see https://developer.mozilla.org/en-US/docs/web/api/element/matches\r\n * @param {HTMLElement} el - （必须）DOM 元素\r\n * @param {String} selector - （必须）匹配 DOM 元素的选择器\r\n * @returns {Boolean}\r\n */\r\nconst matches = (el, selector = '') => {\r\n  const sel = selector.replace(/^>/i, '')\r\n\r\n  if (!selector || !sel || !el) {\r\n    return false\r\n  }\r\n\r\n  /* istanbul ignore else */\r\n  if (el.matches) {\r\n    return el.matches(sel)\r\n  } else if (el.msMatchesSelector) {\r\n    return el.msMatchesSelector(sel)\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nexport default matches\r\n","/**\r\n * 获取 DOM 元素的父节点\r\n * ========================================================================\r\n * @method getParentOrHost\r\n * @param {*|HTMLElement} el - （必须）要获取父节点的 DOM 元素\r\n * @returns {*|HTMLElement}\r\n */\r\nconst getParentOrHost = (el) => {\r\n  return el.host && el !== document && el.host.nodeType\r\n    ? el.host\r\n    : el.parentNode\r\n}\r\n\r\nexport default getParentOrHost\r\n","export const CAPTURE_EVENTS = [\r\n  'focusout',\r\n  'blur',\r\n  'focusin',\r\n  'focus',\r\n  'load',\r\n  'unload',\r\n  'mouseenter',\r\n  'mouseleave'\r\n]\r\n","import { CAPTURE_EVENTS } from './enum'\r\nimport _delete from './_delete'\r\n\r\n/**\r\n * （私有方法）取消 type 类型的代理事件绑定\r\n * ========================================================================\r\n * 如果没有设置 handler，则销毁 this.$options 绑定的所有符合 type 事件类型的事件绑定\r\n * ========================================================================\r\n * @method _off\r\n * @param {HTMLElement} el - （必须）取消事件绑定的 DOM 元素\r\n * @param {String} type - （必须）事件类型\r\n * @param {Function} fn - （必须）事件处理器回调函数\r\n * @private\r\n */\r\nconst _off = (el, type, fn) => {\r\n  const capture = CAPTURE_EVENTS.indexOf(type) > -1\r\n\r\n  /* istanbul ignore else */\r\n  if (fn._delegateListener) {\r\n    fn = fn._delegateListener\r\n    delete fn._delegateListener\r\n  }\r\n\r\n  // 移除缓存的 _listeners 数据\r\n  _delete(el, type, fn)\r\n\r\n  el.removeEventListener(type, fn, capture)\r\n}\r\n\r\nexport default _off\r\n","/**\r\n * 删除 DOM 元素缓存的 _listeners 数据\r\n * ========================================================================\r\n * @method _delete\r\n * @param {HTMLElement} el - 要删除 listener 的 DOM 元素\r\n * @param {String} type - 事件类型（名称）\r\n * @param {Function} [fn] - 事件处理器回调函数\r\n */\r\nconst _delete = function (el, type, fn) {\r\n  const listeners = el._listeners\r\n  let index = -1\r\n\r\n  if (listeners.length < 1) {\r\n    return false\r\n  }\r\n\r\n  // 移除缓存的 _listeners 数据\r\n  listeners.forEach((listener, i) => {\r\n    const handler = listener.fn\r\n\r\n    if (type === listener.type) {\r\n      index = i\r\n\r\n      if (handler === fn) {\r\n        index = i\r\n      }\r\n    }\r\n  })\r\n\r\n  /* istanbul ignore else */\r\n  if (index > -1) {\r\n    listeners.splice(index, 1)\r\n  }\r\n}\r\n\r\nexport default _delete\r\n","import isString from '../../utils/types/isString'\r\nimport isElement from '../../utils/types/isElement'\r\nimport getListeners from './getListeners'\r\nimport _off from './_off'\r\n\r\n/**\r\n * 销毁（type 类型的）代理事件绑定\r\n * ========================================================================\r\n * 1. 设置了事件类型 type，则销毁指定类型的事件绑定，否则清除所有代理事件绑定\r\n * 2. recurse 设置为 true，递归销毁子节点全部事件绑定\r\n * ========================================================================\r\n * @method purgeElement\r\n * @param {HTMLElement|String} el - （必须）DOM 元素或者其选择器\r\n * @param {String|Boolean} type - （必须）事件类型\r\n * @param {Boolean} [recurse] - （可选）是否递归销毁子节点所有事件绑定\r\n */\r\nconst purgeElement = function (el, type, recurse = false) {\r\n  const $element = isString(el) ? document.querySelector(el) : el\r\n  const $children = $element.childNodes\r\n  const listeners = getListeners($element, type)\r\n\r\n  listeners.forEach((listener) => {\r\n    _off($element, listener.type, listener.fn)\r\n  })\r\n\r\n  if (\r\n    (recurse || type === true || arguments.length === 1) &&\r\n    $element &&\r\n    $children\r\n  ) {\r\n    $children.forEach(($child) => {\r\n      if (isElement($child)) {\r\n        purgeElement($child, type, recurse)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default purgeElement\r\n","import isString from '../../utils/types/isString'\r\n\r\n/**\r\n * 获取 DOM 元素（type 事件类型）事件绑定信息\r\n * ========================================================================\r\n * 如果设置了事件类型 type， 则返回指定类型的事件绑定信息，否则返回所有事件绑定信息\r\n * ========================================================================\r\n * @methods getListeners\r\n * @param {HTMLElement} el - （必须）要获取事件绑定信息的 DOM 元素\r\n * @param {String} [type] - （可选）事件类型\r\n * @returns {Array} - 已绑定的事件信息\r\n */\r\nconst getListeners = (el, type) => {\r\n  let listeners = el._listeners || []\r\n\r\n  if (isString(type) && type) {\r\n    listeners = listeners.filter((listener) => {\r\n      return listener.type === type\r\n    })\r\n  }\r\n\r\n  return listeners\r\n}\r\n\r\nexport default getListeners\r\n","import purgeElement from './purgeElement'\r\nimport isFunction from '../types/isFunction'\r\nimport _off from './_off'\r\n\r\n/**\r\n * 取消 type 类型的代理事件绑定\r\n * ========================================================================\r\n * 如果没有设置 handler，则销毁 this.$options 绑定的所有符合 type 事件类型的事件绑定\r\n * ========================================================================\r\n * @method off\r\n * @param {HTMLElement|Object} el - （必须）取消事件绑定的 DOM 元素\r\n * @param {String} type - （必须）事件类型\r\n * @param {Function} [fn] - （可选）事件处理器回调函数\r\n */\r\nconst off = (el, type, fn) => {\r\n  // 如果不设置 fn 参数，默认清除 el 元素上绑定的所有事件处理器\r\n  if (!isFunction(fn)) {\r\n    purgeElement(el, type)\r\n    return false\r\n  }\r\n\r\n  _off(el, type, fn)\r\n}\r\n\r\nexport default off\r\n","import closest from '../../utils/dom/closest'\r\nimport off from './off'\r\nimport getTarget from './getTarget'\r\n\r\nimport { CAPTURE_EVENTS } from './enum'\r\n\r\n/**\r\n * 绑定代理事件\r\n * ========================================================================\r\n * @method on\r\n * @param {HTMLElement|String|Object} el - （必须）绑定代理事件的 DOM 节点\r\n * @param {String} selector - （必须）事件代理目标 DOM 元素的选择器\r\n * @param {String|Function} type - （必须）事件类型或者事件处理器回调函数\r\n * @param {Function|Object} fn - （可选） 事件处理器回调函数或者传递给事件处理器回调函数的数据对象\r\n * @param {Object|Boolean} [data] - （可选）传递给事件处理器回调函数的数据对象或者事件处理器回调函数的 this 上下文指向，\r\n * @param {Object|Boolean} [context] - （可选）事件处理器回调函数的 this 上下文指向，或者是否仅触发一次\r\n * 当设置为 true 时，则事件处理器回调函数的 this 上下文指向为 data 对象\r\n * @param {Boolean} once - （可选）是否仅触发一次\r\n */\r\nconst on = (el, selector, type, fn, data, context, once = false) => {\r\n  // CAPTURE_EVENTS 中的特殊事件，采用事件捕获模型\r\n  const capture = CAPTURE_EVENTS.indexOf(type) > -1\r\n\r\n  const listener = function (evt) {\r\n    const target = getTarget(evt)\r\n    // 通过 Element.matches 方法获得点击的目标元素\r\n    const delegateTarget = closest(target, selector, el)\r\n    let overrideContext = context || el\r\n\r\n    evt.delegateTarget = delegateTarget\r\n\r\n    // 当设置为 true 时，则事件处理器回调函数的\r\n    // this 上下文指向为 data 对象\r\n    if (context === true) {\r\n      overrideContext = data\r\n    }\r\n\r\n    /* istanbul ignore else */\r\n    if (delegateTarget) {\r\n      // 仅触发一次\r\n      /* istanbul ignore else */\r\n      if (once === true) {\r\n        off(el, type, listener)\r\n      }\r\n\r\n      fn.call(overrideContext, evt, data)\r\n    }\r\n  }\r\n\r\n  if (!el) {\r\n    return false\r\n  }\r\n\r\n  if (!el._listeners) {\r\n    el._listeners = []\r\n  }\r\n\r\n  // 缓存 options 元素绑定的事件处理器\r\n  el._listeners.push({\r\n    el,\r\n    selector,\r\n    type,\r\n    fn: listener,\r\n    data,\r\n    context,\r\n    capture\r\n  })\r\n\r\n  // 缓存包装后的事件处理器\r\n  fn._delegateListener = listener\r\n\r\n  el.addEventListener(type, listener, capture)\r\n}\r\n\r\nexport default on\r\n","import resolveTextNode from '../../utils/dom/resolveTextNode'\r\n\r\n/**\r\n * 返回触发事件的 target DOM 元素\r\n * ========================================================================\r\n * @method getTarget\r\n * @param {Event} evt - Event 对象\r\n * @return {HTMLElement} - Event 对象的 target DOM 元素\r\n */\r\nconst getTarget = function (evt) {\r\n  const target = evt.target\r\n\r\n  return resolveTextNode(target)\r\n}\r\n\r\nexport default getTarget\r\n","/**\r\n * 在某些情况下，某些浏览器（例如：Safari 浏览器）会返回实际的目标元素内部的文本节点。\r\n * resolveTextNode() 方法则会返回实际的目标节点。\r\n * ========================================================================\r\n * @method resolveTextNode\r\n * @param {HTMLElement|Text} el - 要解析的节点\r\n * @return {*|HTMLElement} - 实际的目标 DOM 节点\r\n */\r\nconst resolveTextNode = function (el) {\r\n  if (el && el.nodeType === 3) {\r\n    return el.parentNode\r\n  }\r\n\r\n  return el\r\n}\r\n\r\nexport default resolveTextNode\r\n","import matches from './matches'\r\nimport getParentOrHost from './getParentOrHost'\r\n\r\n/**\r\n * 获取 options 元素父元素最近的包含 selector 选择器的元素\r\n * ========================================================================\r\n * @method closest\r\n * @param {HTMLElement} el - （必须）DOM 元素\r\n * @param {String} selector - （必须）DOM 元素的选择其\r\n * @param {HTMLElement} [ctx] - （必须）比对的 DOM 元素\r\n * @param {Boolean} [includeCTX] - （必须）是否包含 context DOM 元素\r\n * @returns {null|HTMLElement} - 返回最接近的 DOM 元素\r\n */\r\nconst closest = (el, selector, ctx, includeCTX) => {\r\n  const context = ctx || document\r\n\r\n  if (!el) {\r\n    return null\r\n  }\r\n\r\n  do {\r\n    /* istanbul ignore else */\r\n    if (\r\n      (selector != null &&\r\n        (selector.startsWith('>')\r\n          ? el.parentNode === context && matches(el, selector)\r\n          : matches(el, selector))) ||\r\n      (includeCTX && el === context)\r\n    ) {\r\n      return el\r\n    }\r\n\r\n    /* istanbul ignore else */\r\n    if (el === context) {\r\n      break\r\n    }\r\n\r\n    /* jshint boss:true */\r\n  } while ((el = getParentOrHost(el)))\r\n}\r\n\r\nexport default closest\r\n","const SYMBOLS = []\r\n\r\nexport default SYMBOLS\r\n","import SYMBOLS from './symbols'\r\n\r\n/**\r\n * @method getSymbol\r\n * @param {String} name\r\n * @param {String} [iconSet]\r\n * @returns {String}\r\n */\r\nconst getSymbol = (name, iconSet = 'icon') => {\r\n  const patternName = /id=\"(.*?)\"/\r\n  const patternSet = /^(\\w+)-/\r\n  const symbols = SYMBOLS\r\n\r\n  return symbols.find((symbol) => {\r\n    const names = patternName.exec(symbol)\r\n    const fullName = names[1]\r\n    const sets = patternSet.exec(fullName)\r\n    const setName = sets[1]\r\n    const iconName =\r\n      iconSet === 'icon' ? `${iconSet}-${name}` : `${iconSet}-icon-${name}`\r\n\r\n    return setName === iconSet && fullName === iconName\r\n  })\r\n}\r\n\r\nexport default getSymbol\r\n","import isString from '../../utils/types/isString'\r\nimport getSymbol from './getSymbol'\r\nimport SYMBOLS from './symbols'\r\n\r\n/**\r\n *\r\n * @method getSymbols\r\n * @param {String} [name]\r\n * @param {String} [iconSet]\r\n * @returns {string[]|*}\r\n */\r\nconst getSymbols = (name, iconSet = 'icon') => {\r\n  if (isString(name)) {\r\n    return getSymbol(name, iconSet)\r\n  }\r\n\r\n  return [...SYMBOLS]\r\n}\r\n\r\nexport default getSymbols\r\n","import add from './add'\r\nimport getSymbols from './getSymbols'\r\n\r\n/**\r\n * 绘制 SVG 图标集\r\n * ========================================================================\r\n * @method paint\r\n * @param {String|Array} symbol\r\n */\r\nconst paint = (symbol = '') => {\r\n  const $body = document.body\r\n  let $icons = document.querySelector('#outline-icons')\r\n  let symbols = []\r\n\r\n  add(symbol)\r\n  symbols = getSymbols()\r\n\r\n  if ($icons) {\r\n    $icons.innerHTML = symbols.join('')\r\n  } else {\r\n    $icons = document.createElement('div')\r\n    $icons.innerHTML =\r\n      `<svg id=\"outline-icons\" aria-hidden=\"true\" style=\"position:absolute;display:none;width:0;height:0;overflow:hidden;\">` +\r\n      `${symbols.join('')}` +\r\n      `</svg>`\r\n    $body.insertBefore($icons.firstChild, $body.firstChild)\r\n  }\r\n}\r\n\r\nexport default paint\r\n","import isArray from '../../utils/types/isArray'\r\nimport isString from '../../utils/types/isString'\r\nimport SYMBOLS from './symbols'\r\n\r\n/**\r\n * @method add\r\n * @param {Array|String} symbols\r\n * @return {Boolean}\r\n */\r\nconst add = (symbols) => {\r\n  if (!symbols) {\r\n    return false\r\n  }\r\n\r\n  if (isArray(symbols) && symbols.length > 0) {\r\n    symbols.forEach((symbol) => {\r\n      /* istanbul ignore else */\r\n      if (SYMBOLS.indexOf(symbol) === -1 && isString(symbol)) {\r\n        SYMBOLS.push(symbol)\r\n      }\r\n    })\r\n  } else {\r\n    /* istanbul ignore else */\r\n    if (isString(symbols)) {\r\n      SYMBOLS.push(symbols)\r\n    }\r\n  }\r\n}\r\n\r\nexport default add\r\n","/**\r\n * 存储订阅者（主题和处理器的）私有对象\r\n * ========================================================================\r\n * @type {{}}\r\n * @private\r\n */\r\nconst _subscribers = {}\r\n\r\nexport default _subscribers\r\n","import hasOwn from '../../utils/lang/hasOwn'\r\nimport _subscribers from './_subscribers'\r\n\r\n/**\r\n * 判断是否存在与给定 topic 完全匹配的订阅者信息\r\n * ========================================================================\r\n * @method _hasDirectSubscribersFor\r\n * @param {String} topic - （必须）订阅主题字符串\r\n * @returns {Boolean}\r\n */\r\nconst _hasDirectSubscribersFor = (topic) => {\r\n  return hasOwn(_subscribers, topic) && _subscribers[topic].length > 0\r\n}\r\n\r\nexport default _hasDirectSubscribersFor\r\n","import _hasDirectSubscribersFor from './_hasDirectSubscribersFor'\r\nimport _hasSubscribers from './_hasSubscribers'\r\n\r\n/**\r\n * 判断是否存在包含 topic 指定的订阅者信息\r\n * ========================================================================\r\n * @method has\r\n * @param {String} topic - （必须）主题名称\r\n * @param {Boolean} [isDirect] - （可选）是否为直接的主题，默认值：true\r\n * @returns {Boolean}\r\n */\r\nconst has = (topic, isDirect = true) => {\r\n  return isDirect ? _hasDirectSubscribersFor(topic) : _hasSubscribers(topic)\r\n}\r\n\r\nexport default has\r\n","import _hasDirectSubscribersFor from './_hasDirectSubscribersFor'\r\n\r\n/**\r\n * 判断是否存在包含给定 topic 相关的订阅者信息\r\n * ========================================================================\r\n * @method _hasSubscribers\r\n * @param {String} topic - （必须）订阅主题字符串\r\n * @returns {Boolean}\r\n */\r\nconst _hasSubscribers = (topic) => {\r\n  let found = _hasDirectSubscribersFor(topic)\r\n  let position = topic.lastIndexOf('.')\r\n\r\n  while (!found && position !== -1) {\r\n    topic = topic.substring(0, position)\r\n    position = topic.lastIndexOf('.')\r\n    found = _hasDirectSubscribersFor(topic)\r\n  }\r\n\r\n  return found\r\n}\r\n\r\nexport default _hasSubscribers\r\n","import isTypedArray from '../../utils/types/isTypedArray'\r\nimport has from './has'\r\nimport _hasDirectSubscribersFor from './_hasDirectSubscribersFor'\r\nimport _subscribers from './_subscribers'\r\n\r\n/**\r\n * （异步）发布订阅主题信息\r\n * ========================================================================\r\n * 主题默认是异步发布的。确保在消费者处理主题时，主题的发起者不会被阻止。\r\n * ========================================================================\r\n * @method emit\r\n * @param {String} topic - （必须）主题名称\r\n * @param {Object} [data] - （可选）数据对象\r\n * @param {Boolean} [async] - (可选) 是否异步发布\r\n */\r\nconst emit = (topic, data, async = true) => {\r\n  const execute = (topic) => {\r\n    if (!_hasDirectSubscribersFor(topic)) {\r\n      return false\r\n    }\r\n\r\n    _subscribers[topic].forEach((subscriber) => {\r\n      // 针对 mqtt 消息服务返回的 Uint8Array 类似的 typed arrays 格式的数据\r\n      // 采用 toString() 方法转化为普通（JSON）字符串\r\n      const message = isTypedArray(data) ? data.toString() : data\r\n\r\n      subscriber.callback.call(subscriber.context || subscriber, message)\r\n    })\r\n  }\r\n  const deliver = () => {\r\n    let subscriber = topic\r\n    let position = topic.lastIndexOf('.')\r\n\r\n    while (position !== -1) {\r\n      subscriber = subscriber.substring(0, position)\r\n      position = subscriber.lastIndexOf('.')\r\n\r\n      execute(subscriber)\r\n    }\r\n\r\n    // 执行 topic 对应的处理器\r\n    execute(topic)\r\n    // 执行特殊 topic：'*'（监听全部消息的发布）\r\n    execute('*')\r\n  }\r\n\r\n  if (!has(topic)) {\r\n    return false\r\n  }\r\n\r\n  if (async) {\r\n    setTimeout(deliver, 10)\r\n  } else {\r\n    deliver()\r\n  }\r\n}\r\n\r\nexport default emit\r\n","import toString from '../../utils/lang/toString'\r\n/**\r\n * 判断检测数据是否为 Typed Arrays 类型的数据\r\n * ========================================================================\r\n * @param {*} val\r\n * @returns {boolean}\r\n */\r\nconst isTypedArray = (val) => {\r\n  const TYPES = [\r\n    '[object Int8Array]',\r\n    '[object Uint8Array]',\r\n    '[object Uint8ClampedArray]',\r\n    '[object Int16Array]',\r\n    '[object Uint16Array]',\r\n    '[object Int32Array]',\r\n    '[object Uint32Array]',\r\n    '[object Float32Array]',\r\n    '[object Float64Array]',\r\n    '[object BigInt64Array]',\r\n    '[object BigUint64Array]'\r\n  ]\r\n\r\n  return TYPES.indexOf(toString(val)) > -1\r\n}\r\n\r\nexport default isTypedArray\r\n","import hasOwn from '../../utils/lang/hasOwn'\r\nimport _subscribers from './_subscribers'\r\n\r\n/**\r\n * 删除与给定 topic 相同的订阅者信息\r\n * ========================================================================\r\n * @method _removeSubscriber\r\n * @param {String} topic - （必须）订阅主题字符串\r\n * @returns {Boolean}\r\n */\r\nconst _removeSubscriber = (topic) => {\r\n  if (!hasOwn(_subscribers, topic)) {\r\n    return false\r\n  }\r\n\r\n  delete _subscribers[topic]\r\n}\r\n\r\nexport default _removeSubscriber\r\n","import has from './has'\r\nimport _removeSubscriber from './_removeSubscriber'\r\nimport _removeSubscriberByToken from './_removeSubscriberByToken'\r\n\r\n/**\r\n * 取消订阅主题\r\n * ========================================================================\r\n * @method off\r\n * @param {String} topic - （必须）订阅的主题\r\n * @param {Function|String} [token] - （可选）订阅主题的处理器函数或者唯一 Id 值\r\n */\r\nconst off = (topic, token) => {\r\n  if (!has(topic)) {\r\n    return false\r\n  }\r\n\r\n  if (token) {\r\n    _removeSubscriberByToken(token)\r\n  } else {\r\n    _removeSubscriber(topic)\r\n  }\r\n}\r\n\r\nexport default off\r\n","import _subscribers from './_subscribers'\r\nimport _removeSubscriber from './_removeSubscriber'\r\n\r\n/**\r\n * 通过订阅者 token 值删除订阅者信息\r\n * ========================================================================\r\n * @method _removeSubscriberByToken\r\n * @param {String} token - 订阅者 token 字符串\r\n * @returns {boolean}\r\n * @private\r\n */\r\nconst _removeSubscriberByToken = (token) => {\r\n  const keys = Object.keys(_subscribers)\r\n  let index = -1\r\n\r\n  if (!token || keys.length < 1) {\r\n    return false\r\n  }\r\n\r\n  keys.forEach((subject) => {\r\n    const subscriber = _subscribers[subject]\r\n    let topic\r\n\r\n    subscriber.forEach((execution, j) => {\r\n      if (execution.callback === token || execution.token === token) {\r\n        topic = execution.topic\r\n        subscriber.splice(index, j)\r\n      }\r\n    })\r\n\r\n    /* istanbul ignore else */\r\n    if (subscriber.length < 1) {\r\n      _removeSubscriber(topic)\r\n    }\r\n  })\r\n}\r\n\r\nexport default _removeSubscriberByToken\r\n","import isString from '../utils/types/isString'\r\nimport isObject from '../utils/types/isObject'\r\n\r\nimport extend from '../utils/lang/extend'\r\nimport hasOwn from '../utils/lang/hasOwn'\r\n\r\nimport publish from '../utils/observer/emit'\r\nimport subscribe from '../utils/observer/on'\r\nimport unsubscribe from '../utils/observer/off'\r\n\r\nclass Component {\r\n  constructor(options) {\r\n    this.name = 'component'\r\n    this.attrs = {}\r\n\r\n    if (options) {\r\n      this.initialize(options)\r\n    }\r\n  }\r\n\r\n  initialize(options) {\r\n    this.attr(options).render().addListeners()\r\n    return this\r\n  }\r\n\r\n  attr(prop, value) {\r\n    const attrs = this.attrs\r\n\r\n    if (isString(prop)) {\r\n      // 只能扩展 attrs 中已有的属性\r\n      if (value && hasOwn(attrs, prop)) {\r\n        // 更新单个配置信息\r\n        attrs[prop] = value\r\n        return this\r\n      }\r\n\r\n      // 只传递 prop 参数，则返回对应的属性值\r\n      return attrs[prop]\r\n    } else if (isObject(prop)) {\r\n      // 批量更新配置信息\r\n      extend(attrs, prop)\r\n\r\n      return this\r\n    } else if (arguments.length === 0) {\r\n      // 不传递参数，直接返回整个\r\n      return attrs\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  render() {\r\n    return this\r\n  }\r\n\r\n  refresh() {\r\n    return this\r\n  }\r\n\r\n  destroy() {\r\n    this.removeListeners()\r\n    return this\r\n  }\r\n\r\n  reload(options) {\r\n    let attrs = this.attr()\r\n\r\n    if (options) {\r\n      attrs = this.attr(options)\r\n    }\r\n\r\n    this.destroy().initialize(attrs)\r\n\r\n    return this\r\n  }\r\n\r\n  $emit(event, data) {\r\n    publish(event, data)\r\n    return this\r\n  }\r\n\r\n  $on(event, callback) {\r\n    subscribe(event, callback, this)\r\n    return this\r\n  }\r\n\r\n  $off(event, callback) {\r\n    unsubscribe(event, callback)\r\n    return this\r\n  }\r\n\r\n  addListeners() {\r\n    return this\r\n  }\r\n\r\n  removeListeners() {\r\n    return this\r\n  }\r\n}\r\n\r\nexport default Component\r\n","import hasOwn from './hasOwn'\r\n\r\n/**\r\n * 扩展对象\r\n * ========================================================================\r\n * @method extend\r\n * @param {Object} origin\r\n * @param {Object} source\r\n */\r\nconst extend = (origin, source) => {\r\n  const keys = Object.keys(source)\r\n\r\n  keys.forEach((prop) => {\r\n    if (hasOwn(source, prop)) {\r\n      origin[prop] = source[prop]\r\n    }\r\n  })\r\n}\r\n\r\nexport default extend\r\n","import isFunction from '../../utils/types/isFunction'\r\nimport guid from '../../utils/lang/guid'\r\n\r\nimport _subscribers from './_subscribers'\r\n\r\n/**\r\n * 订阅主题，并给出处理器函数\r\n * ========================================================================\r\n * @method on\r\n * @param {String} topic - （必须）主题名称\r\n * @param {Function} handler - （必须）主题的处理器函数\r\n * @param {Object} [context] - （可选）指定 this 执行上下文\r\n * @return {String} - 唯一的 token 字符串，例如：'guid-1'。\r\n */\r\nconst on = (topic, handler, context = null) => {\r\n  const token = guid()\r\n  let subject = typeof topic === 'symbol' ? topic.toString() : topic\r\n\r\n  if (!isFunction(handler)) {\r\n    return ''\r\n  }\r\n\r\n  /* istanbul ignore else */\r\n  if (!_subscribers[subject]) {\r\n    _subscribers[subject] = []\r\n  }\r\n\r\n  _subscribers[subject].push({\r\n    topic: subject,\r\n    callback: handler,\r\n    context,\r\n    token\r\n  })\r\n\r\n  return token\r\n}\r\n\r\nexport default on\r\n","import isFunction from '../utils/types/isFunction'\r\n\r\nclass Command {\r\n  constructor(name, action, options) {\r\n    this.name = name\r\n    this.options = options\r\n\r\n    if (isFunction(action)) {\r\n      this.action = action\r\n    }\r\n  }\r\n\r\n  execute(options) {\r\n    if (options) {\r\n      this.options = options\r\n    }\r\n\r\n    this.action(options)\r\n\r\n    return this\r\n  }\r\n\r\n  destroy() {\r\n    this.name = ''\r\n    this.options = null\r\n    this.action = null\r\n  }\r\n}\r\n\r\nexport default Command\r\n","import isFunction from '../utils/types/isFunction'\r\n\r\nclass Commands {\r\n  constructor() {\r\n    this.commands = []\r\n  }\r\n\r\n  find(name) {\r\n    return this.commands.find((cmd) => cmd.name === name)\r\n  }\r\n\r\n  exists(name) {\r\n    return !!this.find(name)\r\n  }\r\n\r\n  add(command) {\r\n    if (this.exists(command)) {\r\n      return this\r\n    }\r\n\r\n    this.commands.push(command)\r\n\r\n    return this\r\n  }\r\n\r\n  remove(name) {\r\n    const command = this.find(name)\r\n\r\n    if (!command) {\r\n      return this\r\n    }\r\n\r\n    const commands = this.commands\r\n\r\n    commands.splice(commands.indexOf(command), 1)\r\n\r\n    return this\r\n  }\r\n\r\n  execute(name) {\r\n    const command = this.find(name)\r\n\r\n    if (isFunction(command?.execute)) {\r\n      command.execute()\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  clear() {\r\n    this.commands = []\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nexport default Commands\r\n","import isString from './isString'\r\n\r\nconst isSVG = (str) => {\r\n  const declaration = '(?:<\\\\?xml[^>]*>\\\\s*)?'\r\n  const doctype =\r\n    '(?:<\\\\!doctype svg[^>]*\\\\s*(?:\\\\[?(?:\\\\s*<![^>]*>\\\\s*)*\\\\]?)*[^>]*>\\\\s*)?'\r\n  const content = '<svg[^>]*>[^]*<\\\\/svg>\\\\s*$'\r\n  const svg = `^\\\\s*${declaration}${doctype}${content}\\\\s*$`\r\n  const pattern = new RegExp(svg, 'i')\r\n\r\n  return isString(str) && pattern.test(str)\r\n}\r\n\r\nexport default isSVG\r\n","import isArray from '../../utils/types/isArray'\r\nimport isString from '../../utils/types/isString'\r\nimport isSVG from '../../utils/types/isSVG'\r\nimport setAttributes from '../../utils/dom/setAttributes'\r\n\r\n/**\r\n * 创建 SVG 图标 DOM 元素\r\n * ========================================================================\r\n * @method createElement\r\n * @param {String} name\r\n * @param {Object} [options]\r\n * @param {Number|Array} [options.size]\r\n * @param {String} [options.color]\r\n * @param {String} [options.iconSet]\r\n * @param {Object} [options.attrs]\r\n * @returns {HTMLElement}\r\n */\r\nconst createElement = (name, options = {}) => {\r\n  const ICON = 'outline-icon'\r\n  const size = options.size || 0\r\n  const color = options.color || ''\r\n  const iconSet = options.iconSet || ''\r\n  const width = isArray(size) ? size[0] : size\r\n  const height = isArray(size) ? size[1] : size\r\n  const defaultRules = size ? `width:${width}px;height:${height}px;` : ''\r\n  const cssRules = color ? defaultRules + `color:${color}` : defaultRules\r\n  const attrs = options.attrs || {}\r\n  const $icon = document.createElement('i')\r\n  let binds = ''\r\n  let svg = ''\r\n  let $svg\r\n\r\n  if (!isString(name)) {\r\n    return null\r\n  }\r\n\r\n  if (isSVG(name)) {\r\n    svg = name\r\n  } else {\r\n    binds =\r\n      iconSet && iconSet !== 'icon'\r\n        ? `xlink:href=\"#${iconSet}-icon-${name}\"`\r\n        : `xlink:href=\"#icon-${name}\"`\r\n    svg = `<svg><use ${binds}></use></svg>`\r\n  }\r\n\r\n  $icon.innerHTML = svg\r\n\r\n  if (attrs.className) {\r\n    attrs.className = `${ICON} ${attrs.className}`\r\n  } else {\r\n    attrs.className = ICON\r\n  }\r\n\r\n  setAttributes($icon, attrs)\r\n\r\n  $svg = $icon.querySelector('svg')\r\n  setAttributes($svg, {\r\n    'aria-hidden': true,\r\n    xmlns: 'http://www.w3.org/2000/svg',\r\n    class: 'outline-icon__svg',\r\n    width: 200,\r\n    height: 200,\r\n    style: cssRules\r\n  })\r\n\r\n  return $icon\r\n}\r\n\r\nexport default createElement\r\n","import icon from '../../utils/icons/icon'\r\nimport createElement from '../../utils/dom/createElement'\r\nimport addClass from '../../utils/dom/addClass'\r\n\r\nconst _createButton = (button, rounded = true) => {\r\n  const $icon = icon(button.icon, {\r\n    iconSet: button.iconSet || 'outline',\r\n    color: button.color || '',\r\n    size: button.size\r\n  })\r\n  const $anchor = createElement(\r\n    'a',\r\n    {\r\n      className: `outline-toolbar__anchor`,\r\n      href: button.link\r\n    },\r\n    $icon\r\n  )\r\n  const $button = createElement(\r\n    'div',\r\n    {\r\n      className: `outline-toolbar__button ${button.name}`,\r\n      'data-cmd': button.name\r\n    },\r\n    [button.link ? $anchor : $icon]\r\n  )\r\n\r\n  addClass($icon, 'outline-toolbar__icon')\r\n\r\n  if (rounded) {\r\n    addClass($button, 'outline-toolbar_rounded')\r\n  }\r\n\r\n  if (button.disabled) {\r\n    addClass($button, 'outline-toolbar_disabled')\r\n  }\r\n\r\n  return $button\r\n}\r\n\r\nexport default _createButton\r\n","import createElement from './createElement'\r\n\r\n/**\r\n * 创建 SVG 图标 DOM 元素\r\n * ========================================================================\r\n * @method icon\r\n * @alias createElement\r\n * @see createElement\r\n * @param {String} name\r\n * @param {Object} [options]\r\n * @param {Number|Array} [options.size]\r\n * @param {String} [options.color]\r\n * @param {String} [options.iconSet]\r\n * @returns {HTMLElement}\r\n */\r\nconst icon = (name, options = {}) => {\r\n  return createElement(name, options)\r\n}\r\n\r\nexport default icon\r\n","const SYMBOLS = [\r\n  '<symbol id=\"outline-icon-up\" viewBox=\"0 0 1024 1024\"><path d=\"M494.784 261.696c0.832-0.448 1.536-1.216 2.368-1.536a38.72 38.72 0 0 1 46.08 8.256l277.824 302.272a41.92 41.92 0 0 1-1.536 58.048 39.104 39.104 0 0 1-56.448-1.6L513.728 355.904 260.736 626.048a39.104 39.104 0 0 1-56.448 1.088 41.6 41.6 0 0 1-1.088-57.984L483.84 269.696c0.512-0.512 1.344-0.768 1.92-1.408l1.088-1.344c2.368-2.496 5.312-3.648 8-5.248z\"></path></symbol>',\r\n  '<symbol id=\"outline-icon-down\" viewBox=\"0 0 1024 1024\"><path d=\"M494.784 762.304c0.832 0.448 1.536 1.216 2.368 1.536 15.232 7.488 33.92 4.992 46.08-8.256l277.824-302.272a41.92 41.92 0 0 0-1.536-58.048 39.104 39.104 0 0 0-56.448 1.6l-249.344 271.232-252.992-270.144a39.104 39.104 0 0 0-56.448-1.088 41.6 41.6 0 0 0-1.088 57.984l280.576 299.456c0.512 0.512 1.344 0.768 1.92 1.408l1.088 1.344c2.368 2.496 5.312 3.648 8 5.248z\"></path></symbol>',\r\n  '<symbol id=\"outline-icon-menu\" viewBox=\"0 0 1024 1024\"><path d=\"M320 256h640V128H320zM320 576h640V448H320zM320 896h640v-128H320zM64 256h128V128H64zM64 576h128V448H64zM64 896h128v-128H64z\"></path></symbol>',\r\n  '<symbol id=\"outline-icon-file\" viewBox=\"0 0 1024 1024\"><path d=\"M320 640h256v128H320z\"></path><path d=\"M320 448h384v128H320z\"></path><path d=\"M640 0l320 320v557.696C960 958.528 909.824 1024 848 1024H176C114.176 1024 64 958.528 64 877.696V146.304C64 65.472 114.176 0 176 0H640z m0 128H192v768h640V320h-192V128z\"></path></symbol>',\r\n  '<symbol id=\"outline-icon-close\" viewBox=\"0 0 1024 1024\"><path d=\"M536.96 491.648L310.592 265.344a32 32 0 1 0-45.248 45.248L491.584 536.96l-226.304 226.304a32 32 0 0 0 45.312 45.248l226.24-226.304 226.304 226.304a32 32 0 0 0 45.248-45.248L582.144 536.896l226.304-226.24a32 32 0 0 0-45.248-45.248L536.896 491.584z\"></path></symbol>',\r\n  '<symbol id=\"outline-icon-homepage\" viewBox=\"0 0 26 28\"><path d=\"M22 15.5v7.5c0 0.547-0.453 1-1 1h-6v-6h-4v6h-6c-0.547 0-1-0.453-1-1v-7.5c0-0.031 0.016-0.063 0.016-0.094l8.984-7.406 8.984 7.406c0.016 0.031 0.016 0.063 0.016 0.094zM25.484 14.422l-0.969 1.156c-0.078 0.094-0.203 0.156-0.328 0.172h-0.047c-0.125 0-0.234-0.031-0.328-0.109l-10.813-9.016-10.813 9.016c-0.109 0.078-0.234 0.125-0.375 0.109-0.125-0.016-0.25-0.078-0.328-0.172l-0.969-1.156c-0.172-0.203-0.141-0.531 0.063-0.703l11.234-9.359c0.656-0.547 1.719-0.547 2.375 0l3.813 3.187v-3.047c0-0.281 0.219-0.5 0.5-0.5h3c0.281 0 0.5 0.219 0.5 0.5v6.375l3.422 2.844c0.203 0.172 0.234 0.5 0.063 0.703z\"></path></symbol>',\r\n  '<symbol id=\"outline-icon-github\" viewBox=\"0 0 24 28\"><path d=\"M12 2c6.625 0 12 5.375 12 12 0 5.297-3.437 9.797-8.203 11.391-0.609 0.109-0.828-0.266-0.828-0.578 0-0.391 0.016-1.687 0.016-3.297 0-1.125-0.375-1.844-0.812-2.219 2.672-0.297 5.484-1.313 5.484-5.922 0-1.313-0.469-2.375-1.234-3.219 0.125-0.313 0.531-1.531-0.125-3.187-1-0.313-3.297 1.234-3.297 1.234-0.953-0.266-1.984-0.406-3-0.406s-2.047 0.141-3 0.406c0 0-2.297-1.547-3.297-1.234-0.656 1.656-0.25 2.875-0.125 3.187-0.766 0.844-1.234 1.906-1.234 3.219 0 4.594 2.797 5.625 5.469 5.922-0.344 0.313-0.656 0.844-0.766 1.609-0.688 0.313-2.438 0.844-3.484-1-0.656-1.141-1.844-1.234-1.844-1.234-1.172-0.016-0.078 0.734-0.078 0.734 0.781 0.359 1.328 1.75 1.328 1.75 0.703 2.141 4.047 1.422 4.047 1.422 0 1 0.016 1.937 0.016 2.234 0 0.313-0.219 0.688-0.828 0.578-4.766-1.594-8.203-6.094-8.203-11.391 0-6.625 5.375-12 12-12zM4.547 19.234c0.031-0.063-0.016-0.141-0.109-0.187-0.094-0.031-0.172-0.016-0.203 0.031-0.031 0.063 0.016 0.141 0.109 0.187 0.078 0.047 0.172 0.031 0.203-0.031zM5.031 19.766c0.063-0.047 0.047-0.156-0.031-0.25-0.078-0.078-0.187-0.109-0.25-0.047-0.063 0.047-0.047 0.156 0.031 0.25 0.078 0.078 0.187 0.109 0.25 0.047zM5.5 20.469c0.078-0.063 0.078-0.187 0-0.297-0.063-0.109-0.187-0.156-0.266-0.094-0.078 0.047-0.078 0.172 0 0.281s0.203 0.156 0.266 0.109zM6.156 21.125c0.063-0.063 0.031-0.203-0.063-0.297-0.109-0.109-0.25-0.125-0.313-0.047-0.078 0.063-0.047 0.203 0.063 0.297 0.109 0.109 0.25 0.125 0.313 0.047zM7.047 21.516c0.031-0.094-0.063-0.203-0.203-0.25-0.125-0.031-0.266 0.016-0.297 0.109s0.063 0.203 0.203 0.234c0.125 0.047 0.266 0 0.297-0.094zM8.031 21.594c0-0.109-0.125-0.187-0.266-0.172-0.141 0-0.25 0.078-0.25 0.172 0 0.109 0.109 0.187 0.266 0.172 0.141 0 0.25-0.078 0.25-0.172zM8.937 21.438c-0.016-0.094-0.141-0.156-0.281-0.141-0.141 0.031-0.234 0.125-0.219 0.234 0.016 0.094 0.141 0.156 0.281 0.125s0.234-0.125 0.219-0.219z\"></path></symbol>',\r\n  '<symbol id=\"outline-icon-issues\" viewBox=\"0 0 24 28\"><path d=\"M25.5 15c0 0.547-0.453 1-1 1h-3.5c0 1.953-0.422 3.422-1.047 4.531l3.25 3.266c0.391 0.391 0.391 1.016 0 1.406-0.187 0.203-0.453 0.297-0.703 0.297s-0.516-0.094-0.703-0.297l-3.094-3.078s-2.047 1.875-4.703 1.875v-14h-2v14c-2.828 0-4.891-2.063-4.891-2.063l-2.859 3.234c-0.203 0.219-0.469 0.328-0.75 0.328-0.234 0-0.469-0.078-0.672-0.25-0.406-0.375-0.438-1-0.078-1.422l3.156-3.547c-0.547-1.078-0.906-2.469-0.906-4.281h-3.5c-0.547 0-1-0.453-1-1s0.453-1 1-1h3.5v-4.594l-2.703-2.703c-0.391-0.391-0.391-1.016 0-1.406s1.016-0.391 1.406 0l2.703 2.703h13.188l2.703-2.703c0.391-0.391 1.016-0.391 1.406 0s0.391 1.016 0 1.406l-2.703 2.703v4.594h3.5c0.547 0 1 0.453 1 1zM18 6h-10c0-2.766 2.234-5 5-5s5 2.234 5 5z\"></path></symbol>',\r\n  '<symbol id=\"outline-icon-tags\" viewBox=\"0 0 26 28\"><path d=\"M7 7c0-1.109-0.891-2-2-2s-2 0.891-2 2 0.891 2 2 2 2-0.891 2-2zM23.672 16c0 0.531-0.219 1.047-0.578 1.406l-7.672 7.688c-0.375 0.359-0.891 0.578-1.422 0.578s-1.047-0.219-1.406-0.578l-11.172-11.188c-0.797-0.781-1.422-2.297-1.422-3.406v-6.5c0-1.094 0.906-2 2-2h6.5c1.109 0 2.625 0.625 3.422 1.422l11.172 11.156c0.359 0.375 0.578 0.891 0.578 1.422zM29.672 16c0 0.531-0.219 1.047-0.578 1.406l-7.672 7.688c-0.375 0.359-0.891 0.578-1.422 0.578-0.812 0-1.219-0.375-1.75-0.922l7.344-7.344c0.359-0.359 0.578-0.875 0.578-1.406s-0.219-1.047-0.578-1.422l-11.172-11.156c-0.797-0.797-2.312-1.422-3.422-1.422h3.5c1.109 0 2.625 0.625 3.422 1.422l11.172 11.156c0.359 0.375 0.578 0.891 0.578 1.422z\"></path></symbol>',\r\n  '<symbol id=\"outline-icon-print\" viewBox=\"0 0 24 24\"><path d=\"M18 3v3.984h-12v-3.984h12zM18.984 12q0.422 0 0.727-0.281t0.305-0.703-0.305-0.727-0.727-0.305-0.703 0.305-0.281 0.727 0.281 0.703 0.703 0.281zM15.984 18.984v-4.969h-7.969v4.969h7.969zM18.984 8.016q1.219 0 2.109 0.891t0.891 2.109v6h-3.984v3.984h-12v-3.984h-3.984v-6q0-1.219 0.891-2.109t2.109-0.891h13.969z\"></path></symbol>',\r\n  '<symbol id=\"outline-icon-info\" viewBox=\"0 0 1024 1024\"><path d=\"M512 384.295982a95.994 95.994 0 0 1 95.994 95.994V928.006a95.994 95.994 0 0 1-191.988 0V480.289982a95.994 95.994 0 0 1 95.994-95.994z m0-128.375977A127.992 127.992 0 1 1 512 0.063996a127.992 127.992 0 0 1 0 255.984001z\"></path></symbol>',\r\n  '<symbol id=\"outline-icon-sound\" viewBox=\"0 0 16 16\"><path d=\"M12.757 4.708c-0.406 0.405-1.062 0.405-1.468 0s-0.405-1.062 0-1.468l2.935-2.935c0.406-0.405 1.062-0.405 1.468 0 0.405 0.405 0.405 1.062 0 1.468l-2.935 2.935zM7.996 15.991l-3.996-3.996h-2.997c-0.552 0-0.999-0.447-0.999-0.999v-5.994c0-0.552 0.447-0.999 0.999-0.999h2.997l3.996-3.996c0 0 0.999-0.125 0.999 0.999 0 5.976 0 14.966 0 13.985 0 1.124-0.999 0.999-0.999 0.999zM6.997 4.004l-1.998 1.998h-2.997v3.996h2.997l1.998 1.998v-7.992zM11.992 8.999c-0.552 0-0.999-0.447-0.999-0.999s0.447-0.999 0.999-0.999h2.997c0.552 0 0.999 0.447 0.999 0.999s-0.447 0.999-0.999 0.999h-2.997zM12.757 11.292l2.935 2.935c0.405 0.406 0.405 1.063 0 1.468s-1.062 0.405-1.468 0l-2.935-2.935c-0.405-0.406-0.405-1.063 0-1.468s1.062-0.405 1.468 0z\"></path></symbol>'\r\n]\r\n\r\nexport default SYMBOLS\r\n","import isString from '../utils/types/isString'\r\nimport isFunction from '../utils/types/isFunction'\r\nimport isObject from '../utils/types/isObject'\r\nimport isArray from '../utils/types/isArray'\r\n\r\nimport later from '../utils/lang/later'\r\nimport guid from '../utils/lang/guid'\r\nimport cloneDeep from '../utils/lang/cloneDeep'\r\n\r\nimport createElement from '../utils/dom/createElement'\r\nimport addClass from '../utils/dom/addClass'\r\nimport hasClass from '../utils/dom/hasClass'\r\nimport removeClass from '../utils/dom/removeClass'\r\n\r\nimport on from '../utils/event/on'\r\nimport off from '../utils/event/off'\r\n\r\nimport paint from '../utils/icons/paint'\r\n\r\nimport Component from '../base/component'\r\nimport Command from '../base/command'\r\nimport Commands from '../base/commands'\r\n\r\nimport _createButton from './utils/_createButton'\r\nimport SYMBOLS from './symbols'\r\n\r\nconst DISABLED = 'outline-toolbar_disabled'\r\nconst HIDDEN = 'outline-toolbar_hidden'\r\nconst ACTIVE = 'outline-toolbar_active'\r\n\r\nclass Toolbar extends Component {\r\n  constructor(options) {\r\n    super()\r\n\r\n    this.name = 'toolbar'\r\n    this._default()\r\n\r\n    if (options) {\r\n      this.initialize(options)\r\n    }\r\n  }\r\n\r\n  _default() {\r\n    this.attrs = cloneDeep(Toolbar.DEFAULTS)\r\n\r\n    this.disabled = false\r\n    this.closed = false\r\n\r\n    this.$el = null\r\n    this.buttons = []\r\n    this.commands = null\r\n\r\n    return this\r\n  }\r\n\r\n  initialize(options) {\r\n    let created\r\n\r\n    this.attr(options)\r\n\r\n    this.disabled = this.attr('disabled')\r\n    this.closed = this.attr('closed')\r\n    this.commands = new Commands()\r\n\r\n    created = this.attr('created')\r\n\r\n    if (isFunction(created)) {\r\n      created.call(this)\r\n    }\r\n\r\n    this.render().addListeners()\r\n\r\n    return this\r\n  }\r\n\r\n  isHighlight(name) {\r\n    const button = this.get(name)\r\n\r\n    if (!button) {\r\n      return false\r\n    }\r\n\r\n    return hasClass(button.$el, ACTIVE)\r\n  }\r\n\r\n  isDisabled(name) {\r\n    let button\r\n\r\n    if (name) {\r\n      button = this.get(name)\r\n\r\n      return button.disabled\r\n    }\r\n\r\n    return this.disabled\r\n  }\r\n\r\n  isExist(name) {\r\n    const button = this.get(name)\r\n    return !!button\r\n  }\r\n\r\n  isClosed() {\r\n    return this.closed\r\n  }\r\n\r\n  _getCommand(button) {\r\n    const _self = this\r\n    const { action, name } = button\r\n    let command = null\r\n    let handler = null\r\n    let context\r\n    let listener\r\n\r\n    if (!action) {\r\n      return command\r\n    }\r\n\r\n    handler = action.handler\r\n    context = action.context || this\r\n\r\n    if (isFunction(handler)) {\r\n      listener = handler\r\n    } else if (isString(handler)) {\r\n      listener = function () {\r\n        _self.$emit(handler, name)\r\n      }\r\n    }\r\n\r\n    if (isFunction(listener)) {\r\n      command = new Command(name, listener.bind(context))\r\n    }\r\n\r\n    return command\r\n  }\r\n\r\n  get(name) {\r\n    return this.buttons.find((button) => button.name === name)\r\n  }\r\n\r\n  render() {\r\n    const mounted = this.attr('mounted')\r\n    const buttons = this.attr('buttons') || []\r\n    const placement = this.attr('placement')\r\n\r\n    paint(SYMBOLS)\r\n\r\n    this.$el = createElement('div', {\r\n      id: guid('outline-toolbar'),\r\n      className: `outline-toolbar outline-toolbar_${placement}`\r\n    })\r\n    this._paint(buttons)\r\n    document.body.appendChild(this.$el)\r\n\r\n    if (this.closed) {\r\n      this.hide()\r\n    }\r\n\r\n    if (this.disabled) {\r\n      this.disable()\r\n    }\r\n\r\n    if (isFunction(mounted)) {\r\n      mounted.call(this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  erase() {\r\n    this.$el.innerHTML = ''\r\n    return this\r\n  }\r\n\r\n  _paint(buttons) {\r\n    const rounded = this.attr('rounded')\r\n    const $fragment = document.createDocumentFragment()\r\n\r\n    buttons.forEach((button) => {\r\n      const $button = _createButton(button, rounded)\r\n      const command = this._getCommand(button)\r\n      const { name, disabled, context } = button\r\n\r\n      $fragment.appendChild($button)\r\n\r\n      if (!this.isExist(name)) {\r\n        this.buttons.push({\r\n          $el: $button,\r\n          name,\r\n          disabled: disabled || false,\r\n          context: context || this\r\n        })\r\n\r\n        if (command) {\r\n          this.commands.add(command)\r\n        }\r\n      }\r\n    })\r\n\r\n    this.$el.appendChild($fragment)\r\n\r\n    return this\r\n  }\r\n\r\n  _remove() {\r\n    document.body.removeChild(this.$el)\r\n    return this\r\n  }\r\n\r\n  refresh(buttons) {\r\n    this.attr({ buttons })\r\n    this.erase()._paint(buttons)\r\n    return this\r\n  }\r\n\r\n  add(button) {\r\n    const $el = this.$el\r\n    const $fragment = document.createDocumentFragment()\r\n    const buttons = this.attr('buttons') || []\r\n    const { name, disabled, context } = button\r\n    const command = this._getCommand(button)\r\n    const _add = (button) => {\r\n      const $button = _createButton(button)\r\n\r\n      $fragment.appendChild($button)\r\n\r\n      buttons.push(button)\r\n      this.buttons.push({\r\n        $el: $button,\r\n        name,\r\n        disabled: disabled || false,\r\n        context: context || this,\r\n        command\r\n      })\r\n\r\n      if (command) {\r\n        this.commands.add(command)\r\n      }\r\n    }\r\n\r\n    if (isObject(button)) {\r\n      _add(button)\r\n    } else if (isArray(button)) {\r\n      button.forEach((item) => {\r\n        if (isObject(item)) {\r\n          _add(item)\r\n        }\r\n      })\r\n    }\r\n    $el.appendChild($fragment)\r\n\r\n    return this\r\n  }\r\n\r\n  remove(name) {\r\n    const $el = this.$el\r\n    const buttons = this.buttons\r\n    const button = this.get(name)\r\n    let index = -1\r\n\r\n    if (!button) {\r\n      return this\r\n    }\r\n\r\n    index = buttons.indexOf(button)\r\n\r\n    if (index > -1) {\r\n      buttons.splice(index, 1)\r\n      this.attr('buttons').splice(index, 1)\r\n    }\r\n\r\n    this._disable(name)\r\n    $el.removeChild(button.$el)\r\n\r\n    return this\r\n  }\r\n\r\n  _disable(name) {\r\n    const button = this.get(name)\r\n    const command = this.commands.find(name)\r\n\r\n    if (!button || button.disabled) {\r\n      return this\r\n    }\r\n\r\n    button.disabled = true\r\n\r\n    if (command) {\r\n      this.commands.remove(command)\r\n    }\r\n\r\n    addClass(button.$el, DISABLED)\r\n\r\n    return this\r\n  }\r\n\r\n  _enable(name) {\r\n    const button = this.get(name)\r\n    const command = this.commands.find(name)\r\n\r\n    if (!button || !button.disabled) {\r\n      return this\r\n    }\r\n\r\n    button.disabled = false\r\n\r\n    if (command) {\r\n      this.commands.add(command)\r\n    }\r\n\r\n    removeClass(button.$el, DISABLED)\r\n\r\n    return this\r\n  }\r\n\r\n  disable(name) {\r\n    const disabled = this.attr('afterDisabled')\r\n\r\n    if (name) {\r\n      this._disable(name)\r\n    } else {\r\n      addClass(this.$el, DISABLED)\r\n      this.removeListeners()\r\n      this.disabled = true\r\n\r\n      if (isFunction(disabled)) {\r\n        disabled.call(this)\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  enable(name) {\r\n    const enabled = this.attr('afterEnabled')\r\n\r\n    if (name) {\r\n      this._enable(name)\r\n    } else {\r\n      this.disabled = false\r\n      removeClass(this.$el, DISABLED)\r\n      this.addListeners()\r\n\r\n      if (isFunction(enabled)) {\r\n        enabled.call(this)\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  show(name) {\r\n    const opened = this.attr('afterOpened')\r\n    const button = this.get(name)\r\n    const $el = this.$el\r\n\r\n    if (name) {\r\n      if (!button) {\r\n        return this\r\n      }\r\n\r\n      removeClass(button.$el, HIDDEN)\r\n    } else {\r\n      removeClass($el, HIDDEN)\r\n      this.closed = false\r\n\r\n      if (isFunction(opened)) {\r\n        later(() => {\r\n          opened.call(this)\r\n        }, 310)\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  hide(name) {\r\n    const closed = this.attr('afterClosed')\r\n    const button = this.get(name)\r\n    const $el = this.$el\r\n\r\n    if (name) {\r\n      if (!button) {\r\n        return this\r\n      }\r\n\r\n      addClass(button.$el, HIDDEN)\r\n    } else {\r\n      addClass($el, HIDDEN)\r\n      this.closed = true\r\n\r\n      if (isFunction(closed)) {\r\n        later(() => {\r\n          closed.call(this)\r\n        }, 310)\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  toggle(name) {\r\n    if (this.isClosed()) {\r\n      this.show(name)\r\n    } else {\r\n      this.hide(name)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  highlight(name) {\r\n    const button = this.get(name)\r\n    let $button\r\n\r\n    if (!button) {\r\n      return this\r\n    }\r\n\r\n    $button = button.$el\r\n\r\n    if (hasClass($button, ACTIVE)) {\r\n      removeClass($button, ACTIVE)\r\n    } else {\r\n      addClass($button, ACTIVE)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  updateUpAndDown({ top, min, max }) {\r\n    const current = Math.ceil(top)\r\n\r\n    if (current <= min) {\r\n      this.hide('up')\r\n      this.show('down')\r\n    } else if (current >= max) {\r\n      this.hide('down')\r\n      this.show('up')\r\n    } else if (current > min && current < max) {\r\n      this.show('up')\r\n      this.show('down')\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  destroy() {\r\n    const beforeDestroy = this.attr('beforeDestroy')\r\n    const afterDestroy = this.attr('afterDestroy')\r\n\r\n    if (isFunction(beforeDestroy)) {\r\n      beforeDestroy.call(this)\r\n    }\r\n\r\n    this.commands.clear()\r\n    this.removeListeners()._remove()._default()\r\n\r\n    if (isFunction(afterDestroy)) {\r\n      afterDestroy.call(this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  execute(name) {\r\n    if (this.isDisabled(name)) {\r\n      return this\r\n    }\r\n\r\n    this.commands.execute(name)\r\n\r\n    return this\r\n  }\r\n\r\n  onExecute(evt) {\r\n    const $button = evt.delegateTarget\r\n    let cmd = ''\r\n\r\n    if ($button) {\r\n      cmd = $button.getAttribute('data-cmd')\r\n\r\n      if (cmd) {\r\n        this.execute(cmd)\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  onToolbarUpdate({ top, min, max }) {\r\n    this.updateUpAndDown({ top, min, max })\r\n    return this\r\n  }\r\n\r\n  onAddButton(buttons) {\r\n    this.attr({\r\n      buttons\r\n    })\r\n    this.refresh(buttons)\r\n\r\n    return this\r\n  }\r\n\r\n  onRemoveButton(name) {\r\n    this.remove(name)\r\n    return this\r\n  }\r\n\r\n  addListeners() {\r\n    const buttons = this.attr('buttons') || []\r\n    const $el = this.$el\r\n\r\n    if (!buttons || buttons.length < 1) {\r\n      return this\r\n    }\r\n\r\n    on($el, `.outline-toolbar__button`, 'click', this.onExecute, this, true)\r\n\r\n    this.$on('toolbar:update', this.onToolbarUpdate)\r\n    this.$on('toolbar:add:button', this.onAddButton)\r\n    this.$on('toolbar:remove:button', this.onRemoveButton)\r\n    this.$on('toolbar:toggle', this.toggle)\r\n\r\n    return this\r\n  }\r\n\r\n  removeListeners() {\r\n    const buttons = this.attr('buttons') || []\r\n    const $el = this.$el\r\n\r\n    if (!buttons || buttons.length < 1) {\r\n      return this\r\n    }\r\n\r\n    off($el, '.outline-toolbar__button', this.onExecute)\r\n\r\n    this.$off('toolbar:update')\r\n    this.$off('toolbar:add:button')\r\n    this.$off('toolbar:remove:button')\r\n    this.$off('toolbar:toggle')\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nToolbar.DEFAULTS = (() => {\r\n  const OPTIONS = {\r\n    placement: 'ltr',\r\n    closed: false,\r\n    disabled: false,\r\n    rounded: true,\r\n    buttons: [],\r\n    created: null,\r\n    mounted: null,\r\n    afterClosed: null,\r\n    afterOpened: null,\r\n    afterDisabled: null,\r\n    afterEnabled: null,\r\n    beforeDestroy: null,\r\n    afterDestroy: null\r\n  }\r\n\r\n  return cloneDeep(OPTIONS)\r\n})()\r\n\r\nexport default Toolbar\r\n"],"names":["isString","str","toString","val","Object","prototype","apply","isFunction","isObject","o","isArray","Array","later","fn","delay","setTimeout","guid","uuid","prefix","cloneDeep","obj","clone","from","assign","keys","forEach","key","isElement","nodeName","tagName","nodeType","isDOM","el","isHTMLCollection","fragment","isTextNode","hasOwn","prop","hasOwnProperty","call","hasClass","className","pattern","RegExp","allClass","classList","contains","exec","addClass","_classList","add","indexOf","split","name","length","setAttributes","attrs","attr","value","setAttribute","toLowerCase","style","cssText","innerHTML","innerText","createElement","children","$fragment","document","createDocumentFragment","$el","isValidChild","child","append","$child","createTextNode","appendChild","every","removeClass","remove","replace","matches","selector","sel","msMatchesSelector","getParentOrHost","host","parentNode","CAPTURE_EVENTS","_off","type","capture","_delegateListener","listeners","_listeners","index","listener","i","handler","splice","_delete","removeEventListener","purgeElement","recurse","$element","querySelector","$children","childNodes","getListeners","filter","arguments","off","on","data","context","once","evt","target","getTarget","delegateTarget","closest","ctx","includeCTX","startsWith","overrideContext","push","addEventListener","SYMBOLS","getSymbols","iconSet","getSymbol","patternName","patternSet","find","symbol","fullName","_maybeArrayLike","_toConsumableArray","paint","$body","body","$icons","symbols","join","insertBefore","firstChild","_subscribers","_hasDirectSubscribersFor","topic","has","isDirect","found","position","lastIndexOf","substring","_hasSubscribers","emit","async","execute","subscriber","message","callback","deliver","_removeSubscriber","token","subject","execution","j","_removeSubscriberByToken","Component","constructor","options","this","initialize","render","addListeners","origin","source","extend","refresh","destroy","removeListeners","reload","$emit","event","publish","$on","subscribe","$off","unsubscribe","Command","action","Commands","commands","cmd","exists","command","clear","ICON","size","color","width","height","defaultRules","cssRules","$icon","$svg","binds","svg","test","isSVG","xmlns","class","_createButton","button","rounded","icon","$anchor","href","link","$button","disabled","DISABLED","HIDDEN","ACTIVE","Toolbar","super","_default","DEFAULTS","closed","buttons","created","isHighlight","get","isDisabled","isExist","isClosed","_getCommand","_self","bind","mounted","placement","id","_paint","hide","disable","erase","_remove","removeChild","_add","item","_disable","_enable","enable","enabled","show","opened","toggle","highlight","updateUpAndDown","top","min","max","current","Math","ceil","beforeDestroy","afterDestroy","onExecute","getAttribute","onToolbarUpdate","onAddButton","onRemoveButton","afterClosed","afterOpened","afterDisabled","afterEnabled"],"mappings":"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"}